{"version":3,"sources":["webpack:///webpack/bootstrap 9731b2333f3c141d44c6","webpack:///./src/index.js","webpack:///./src/lib/CircularArray.js","webpack:///./src/Generator.js","webpack:///./src/Chart.js","webpack:///./src/GLView.js","webpack:///./src/lib/math/Vector.js","webpack:///./src/lib/math/Matrix.js","webpack:///./src/lib/math/ArgumentsError.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,6BAA6B;AACtC,SAAQ,6BAA6B;AACrC,SAAQ,8BAA8B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,G;;;;;;AClEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA8D,qBAAqB,EAAE;;AAErF;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3CA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChHA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC/GA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,eAAe;AAClC;AACA,sBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;AC9EA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9731b2333f3c141d44c6","var CircularArray = require('./lib/CircularArray');\nvar Generator = require('./Generator');\nvar Chart = require('./Chart');\nvar GLView = require('./GLView');\nvar Vector = require('./lib/math/Vector');\nvar Matrix = require('./lib/math/Matrix');\n\nvar mat = Matrix([],1,2);\n\nwindow.Vector = Vector;\n\n// var chartElement = document.getElementById('cpu-chart');\nvar glViewElement = document.getElementById('gl-view');\n// var chart = new Chart(chartElement);\nvar glView = new GLView(glViewElement);\n\n// var percentElem = document.getElementById('cpu-percent');\n// var percent = 0;\n//\n// var arrow = document.getElementsByClassName('arrow-icon')[0];\n// var arrowContainer = document.getElementsByClassName('arrow')[0];\n//\n// var generator = Generator.createCombinedGenerator(\n//     [{from: 50, to: 200, weight: 1},\n//     {from: 5, to: 30, weight: 0.2},\n//     {from: 3, to: 15, weight: 0.05}]\n// );\n//\n// var lastResult = 0, next = 0;\n//\n// function rotateArrow() {\n//     var ANGLE_OFFSET = 90;\n//     var angle = -Math.atan((next - lastResult) * 200) / Math.PI * 180;\n//     angle += ANGLE_OFFSET;\n//     arrow.style.transform = 'rotate(' +  angle + 'deg)';\n//\n//     var background;\n//     if (next > 0.7) background = '#f22';\n//     else if (next < 0.4) background = '#2f2';\n//     else background = '#ff2';\n//     arrowContainer.style.backgroundColor = background;\n// }\n//\n// setInterval(function() {\n//     next = generator.next();\n//     // chart.addRecord(next);\n//     percent = next * 100;\n//     rotateArrow();\n//     lastResult = next;\n// },100);\n//\n// function drawPercent(){\n//     percentElem.innerHTML = Math.round(percent);\n// }\n\nfunction onNextFrame() {\n    // chart.draw();\n    glView.draw();\n    // drawPercent();\n    requestAnimationFrame(onNextFrame);\n}\n\nonNextFrame();\n\nwindow.onresize = function () {\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","function CircularArray(length) {\n    var array = [];\n    var maxLength = Math.floor(length);\n    var head = 0;\n\n    this.push = function(value) {\n        if (array.length < maxLength) {\n            array.push(value);\n        } else {\n            array[head++] = value;\n            head %= maxLength;\n        }\n    };\n\n    this.getAt = function (index) {\n        return array[(index + head) % maxLength];\n    };\n\n    this.getLength = function () {\n        return array.length;\n    };\n}\n\nmodule.exports = CircularArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/CircularArray.js\n// module id = 1\n// module chunks = 0","function createCombinedGenerator(genParams) {\n    var generators = [];\n    var weights = [];\n    for (var i = 0; i < genParams.length; i++) {\n        generators.push(new Generator(genParams[i].from, genParams[i].to));\n        weights.push(genParams[i].weight);\n    }\n    return new CombinedGenerator(generators, weights);\n}\n\nfunction CombinedGenerator(generators, weights) {\n    var overallWeight = weights.reduce(function (sum, weight){ return sum + weight; });\n\n    this.next = function() {\n        var next = 0;\n        for (var i = 0; i < generators.length; i++) {\n            next += generators[i].next() * weights[i];\n        }\n        return next / overallWeight;\n    }\n}\n\nfunction Generator(minX, maxX) {\n    var x, y, dy, step;\n    var ly  = Math.random();\n\n    init();\n\n    function init() {\n        x = minX + Math.floor(Math.random() * (maxX - minX));\n        y = Math.random();\n        dy = (y - ly) / x;\n        step = 0;\n    };\n\n    this.next = function() {\n        ly += dy;\n        step++;\n        if (step >= x) init();\n        return ly;\n    };\n}\n\nmodule.exports.createCombinedGenerator = createCombinedGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Generator.js\n// module id = 2\n// module chunks = 0","var CircularArray = require('./lib/CircularArray');\n\nfunction Chart(containerElement, redThreshold, yellowThreshold) {\n    this._chartOffsetX = 30;\n    this._chartOffsetY = 20;\n\n    this._redThreshold = redThreshold || 0.7;\n    this._yellowThreshold = yellowThreshold || 0.3;\n\n    this._wrap = document.createElement('div');\n    this._wrap.style.position = 'relative';\n    this._grid = document.createElement('canvas');\n    this._grid.style.position = 'absolute';\n    this._chart = document.createElement('canvas');\n    this._chart.style.position = 'absolute';\n    // this._chart.style.left = this._chartOffsetX -1 + 'px';\n    // this._chart.style.border = \"1px solid #aaa\";\n\n\n    this._wrap.appendChild(this._grid);\n    this._wrap.appendChild(this._chart);\n    containerElement.appendChild(this._wrap);\n\n    var rect = containerElement.getBoundingClientRect();\n    this.setSize(rect.width, rect.height);\n\n    this._points = new CircularArray(rect.width);\n\n    this._ctx =  this._chart.getContext('2d');\n    this._ctx.strokeStyle = 'black';\n    //this._ctx.fillStyle = 'tomato';\n\n    this._setGradientFill();\n    this._ctx.lineWidth = 2;\n\n    this._ctxGrid = this._grid.getContext('2d');\n    this._ctxGrid.strokeStyle = '#aaa';\n    this._ctxGrid.lineWidth = 1;\n\n\n\n    this._drawGrid();\n}\n\nChart.prototype.setSize = function(width, height) {\n    this._wrap.width = width;\n    this._wrap.height = height;\n    this._grid.width = width;\n    this._grid.height = height;\n    this._chart.width = width - this._chartOffsetX;\n    this._chart.height = height - this._chartOffsetY;\n};\n\nChart.prototype._setGradientFill = function () {\n    var greenColor = 'rgba(9, 237, 58, 0.8)';\n    var yellowColor = 'rgba(247, 247, 44, 0.8)';\n    var redColor = 'rgba(252, 33, 0, 0.8)';\n\n    var blur = 0.25;\n\n    var gradient = this._ctx.createLinearGradient(0, 0, 0, this._chart.height);\n\n    gradient.addColorStop(0, redColor);\n    gradient.addColorStop(1 - this._redThreshold - blur / 2, redColor);\n    gradient.addColorStop(1 - this._redThreshold + blur / 2, yellowColor);\n    gradient.addColorStop(1 - this._yellowThreshold - blur / 2, yellowColor);\n    gradient.addColorStop(1 - this._yellowThreshold + blur / 2, greenColor);\n    gradient.addColorStop(1, greenColor);\n\n    this._ctx.fillStyle = gradient;\n};\n\nChart.prototype._drawGrid = function() {\n    var rowNum = 4;\n    var colNum = 7;\n    var rowHeight = this._chart.height / rowNum;\n    var colWidth = this._chart.width / colNum;\n\n    this._ctxGrid.textAlign = \"left\";\n    this._ctxGrid.textBaseline = \"top\";\n    for (var i = 0; i < rowNum + 1; i++) {\n        this._ctxGrid.fillText(Math.round((1 - (i / rowNum)) * 100) + '%', this._chart.width + 1, i * rowHeight);\n        var startX = 0.5,\n            startY = Math.round(i * rowHeight) + 0.5;\n        var endX = this._chart.width,\n            endY = startY;\n        this._ctxGrid.moveTo(startX, startY);\n        this._ctxGrid.lineTo(endX, endY);\n    }\n    for (i = 0; i < colNum + 1; i++) {\n        startX = Math.round(i * colWidth) + 0.5;\n        startY = 0.5;\n        endX = startX;\n        endY = this._chart.height + 0.5;\n        this._ctxGrid.moveTo(startX, startY);\n        this._ctxGrid.lineTo(endX, endY);\n    }\n    this._ctxGrid.stroke();\n};\n\nChart.prototype.draw = function() {\n    this._ctx.clearRect(0,0,this._chart.width,this._chart.height);\n    this._ctx.beginPath();\n    // this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height - this._points.getAt(0));\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height);\n    for (var i = 0; i < this._points.getLength(); i++) {\n        this._ctx.lineTo(this._chart.width - this._points.getLength() + i, this._chart.height - this._points.getAt(i));\n    }\n    this._ctx.lineTo(this._chart.width, this._chart.height);\n    this._ctx.closePath();\n    this._ctx.fill();\n};\n\nChart.prototype.addRecord = function(record) {\n    this._points.push(record * this._chart.height);\n};\n\nmodule.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Chart.js\n// module id = 3\n// module chunks = 0","function requestShaderSource(shaderPath, callback) {\n    var isAsync = !!callback;\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', shaderPath, isAsync);\n    xhr.send();\n    if (isAsync) {\n        xhr.onload(function () {\n            callback(xhr.responseText);\n        });\n        xhr.onerror(function () {\n            throw new Error(\"Cannot load shader \" + shaderPath);\n        });\n    } else return xhr.responseText;\n}\n\nfunction createShader(gl, type, source) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if(success) {\n        return shader;\n    }\n\n    console.info(gl.getShaderInfoLog(shader));\n    this.gl.deleteShader(shader);\n}\n\nfunction createProgram(gl, vertexShader, fragmentShader) {\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n\n    console.info(this.gl.getProgramInfoLog(program));\n    this.gl.deleteProgram(program);\n}\n\nfunction GLView(containerElement) {\n\n    this._chart = document.createElement('canvas');\n    this._chart.style.position = 'absolute';\n    containerElement.appendChild(this._chart);\n\n    var gl = this._chart.getContext(\"webgl\");\n\n    this.gl = gl;\n\n    //var vertexShaderSource = document.getElementById(\"shader.vert\").innerText;\n    //var fragmentShaderSource = document.getElementById(\"shader.vert\").text;\n\n    var vertexShaderSource = requestShaderSource('shaders/shader.vert');\n    var fragmentShaderSource = requestShaderSource('shaders/shader.frag');\n\n    var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    var program = createProgram(gl, vertexShader, fragmentShader);\n\n    gl.useProgram(program);\n\n    var mouseUniformLocation = gl.getUniformLocation(program, 'mouse');\n\n    this._chart.onmousemove = function (event) {\n        var x = (event.clientX - this.offsetLeft) / rect.width;\n        var y = (event.clientY - this.offsetTop) / rect.height;\n        gl.uniform2f(mouseUniformLocation, x, y);\n    };\n\n    var positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    var positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    var positions = [\n        0, 0,\n        1, 0,\n        0, 1,\n        0, 1,\n        1, 0,\n        1, 1\n    ];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    var size = 2;\n    var type = gl.FLOAT;\n    var normalize = false;\n    var stride = 0;\n    var offset = 0;\n    this.gl.vertexAttribPointer(positionAttributeLocation, size, type, normalize, stride, offset);\n\n    // canvas.width = 640;\n    // canvas.height = 480;\n    var rect = containerElement.getBoundingClientRect();\n    this._chart.width = rect.width;\n    this._chart.height = rect.height;\n    this.gl.viewport(0,0, rect.width, rect.height);\n}\n\nGLView.prototype.draw = function() {\n    this.gl.clearColor(0,0,0,0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    var primitiveType = this.gl.TRIANGLES;\n    var offset = 0;\n    var count = 6;\n    this.gl.drawArrays(primitiveType, offset, count);\n};\n\nmodule.exports = GLView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/GLView.js\n// module id = 4\n// module chunks = 0","function createFromArray(arr) {\n  this.size = arr.length;\n  this.data = [];\n  for (var i = 0; i < arr.length; ++i) {\n    this.data.push(arr[i]);\n  }\n}\n\nfunction createInitialized(size, initialValue) {\n  this.size = size;\n  this.data = [];\n  for (var i = 0; i < this.size; ++i) {\n    this.data.push(initialValue);\n  }\n}\n\nfunction createNotInitialized(size) {\n  createInitialized.call(this, size, 0);\n}\n\nfunction Vector() {\n  if(!(this instanceof Vector)) {\n    return new Vector(arguments);\n  }\n\n  if (arguments.length > 0) {\n    if(arguments[0] instanceof Array){\n      createFromArray.apply(this, arguments);\n      return;\n    }\n    else if (typeof arguments[0] === 'number') {\n        if (arguments.length > 1) {\n          createInitialized.apply(this, arguments);\n          return;\n        } else {\n          createNotInitialized.apply(this, arguments);\n          return;\n      }\n    }\n  }\n  throw new Error('Incorrect arguments passed to the Vector constructor');\n}\n\nVector.prototype.toString = function() {\n  var res = ['\\n'];\n  for (var i = 0; i < this.size; ++i) {\n    res.push('[');\n    res.push(this.data[i]);\n    res.push(']\\n');\n  }\n  return res.join('');\n};\n\nVector.prototype.add = function(vecB) {\n  if (!(vecB instanceof Vector)) throw new Error('Argument is not instance of a Vector');\n  if (this.size !== vecB.size) throw new Error('Vector sizes don\\'t match');\n  for (var i = 0; i < this.size; ++i) {\n    this.data[i] += vecB.data[i];\n  }\n  return this;\n};\n\nVector.prototype.sub = function(vecB) {\n  if (!(vecB instanceof Vector)) throw new Error('Argument is not instance of a Vector');\n  if (this.size !== vecB.size) throw new Error('Vector sizes don\\'t match');\n  for (var i = 0; i < this.size; ++i) {\n    this.data[i] -= vecB.data[i];\n  }\n  return this;\n};\n\nVector.prototype.mul = function (scalar) {\n  for (var i = 0; i < this.size; ++i) {\n    this.data[i] *= scalar;\n  }\n  return this;\n};\n\nVector.prototype.getSqrLength = function() {\n  sqrSum = 0;\n  for (var i = 0; i < this.size; ++i) {\n    sqrSum += this.data[i] * this.data[i];\n  }\n  return sqrSum;\n};\n\nVector.prototype.getLength = function() {\n  return Math.sqrt(this.getSqrLength());\n};\n\nVector.prototype.toArray = function() {\n  var arr = [];\n  for (var i = 0; i < this.size; ++i) {\n    arr.push(this.data[i]);\n  }\n  return arr;\n};\n\nVector.dot = function(vecA, vecB) {\n  if (vecA.size !== vecB.size) throw new Error('Vector sizes don\\'t match');\n  var product = 0;\n  for(var i = 0; i < vecA.size; ++i) {\n    product += vecA.data[i] * vecB.data[i];\n  }\n  return product;\n};\n\nVector.clone = function(vec) {\n  return new Vector(vec.data);\n};\n\nmodule.exports = Vector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/math/Vector.js\n// module id = 5\n// module chunks = 0","var Vector = require('./Vector');\nvar ArgumentsError = require('./ArgumentsError');\n\nfunction createFromTwoDimensionalArray(arr) {\n  this.data = [];\n  this.cols = arr.length;\n  this.rows = -1;\n  for (var i = 0; i < arr.length; ++i) {\n    if(arr[i] instanceof Vector) {\n      this.data.push(Vector.clone(arr[i]));\n      if (this.rows !== -1 && arr[i].size) {\n        throw new Error('Argument array has Vectors of different sizes');\n      }\n      this.rows = arr[i].size;\n    } else if (arr[i] instanceof Array) {\n      this.data.push(Vector(arr[i]));\n      if (this.rows !== -1 && arr[i].length) {\n        throw new Error('Argument array has arrays of different lengths');\n      }\n      this.rows = arr[i].length;\n    } else {\n      throw new Error('Incorrect arguments passed to the Matrix constructor');\n    }\n  }\n}\n\nfunction createFromOneDimensionalArray(arr, cols, rows) {\n  throw new ArgumentsError('Test Error');\n  this.data = [];\n  this.cols = cols;\n  this.rows = rows || arr.length / cols;\n\n  if (cols*rows !== arr.length){\n    throw new Error('Matrix size doesn\\'t match length');\n  }\n\n  try {\n    for (var i = 0; i < this.cols; ++i) {\n      var col = [];\n      for (var j = 0; j < this.rows; ++j) {\n        col.push(arr[i * this.rows + j]);\n      }\n      this.data.push(Vector(col));\n    }\n  } catch (e) {\n    throw new Error('Incorrect arguments passed to the Matrix constructor');\n  }\n}\n\nfunction Matrix() {\n\n  if(!(this instanceof Matrix)) {\n    return new Matrix(...arguments);\n  }\n\n  if (arguments.length > 0) {\n    if (arguments[0] instanceof Array) {\n      if (arguments.length === 1) {\n        createFromTwoDimensionalArray.apply(this, arguments);\n        return;\n      } else if (arguments.length > 1) {\n        createFromOneDimensionalArray.apply(this, arguments);\n        return;\n      }\n    }\n    else if (typeof arguments[0] === 'number') {\n      if (arguments.length === 1) {\n        createSquareIdentity.apply(this, arguments);\n        return;\n      } else {\n        createIdentity.apply(this, arguments);\n        return;\n      }\n    }\n  }\n  throw new Error('Incorrect arguments passed to the Matrix constructor');\n}\n\nmodule.exports = Matrix;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/math/Matrix.js\n// module id = 6\n// module chunks = 0","function ArgumentsError(message) {\n  this.name = 'Arguments Error';\n  this.message = message || 'Incorrect arguments passed';\n}\n\nArgumentsError.prototype = Object.create(Error.prototype);\nArgumentsError.prototype.constructor = ArgumentsError;\n\nmodule.exports = ArgumentsError;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/math/ArgumentsError.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}