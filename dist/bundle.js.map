{"version":3,"sources":["webpack:///webpack/bootstrap bc1f9881cb5c8295e38e","webpack:///./src/index.js","webpack:///./src/CircularArray.js","webpack:///./src/Generator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,G;;;;;;ACxCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bc1f9881cb5c8295e38e\n **/","var CircularArray = require('./CircularArray');\nvar Generator = require('./Generator');\n\nvar chart = document.getElementById('cpu');\nvar canvas = document.createElement('canvas');\n\nchart.appendChild(canvas);\n\ncanvas.setAttribute('width', chart.getBoundingClientRect().width);\ncanvas.setAttribute('height', chart.getBoundingClientRect().height);\n\nvar ctx =  canvas.getContext('2d');\n\nctx.strokeStyle = 'black';\nctx.lineWidth = 2;\n\nfunction drawChart(data) {\n\n    ctx.clearRect(0,0,canvas.width,canvas.height);\n    ctx.beginPath();\n    ctx.moveTo(canvas.width - data.getLength(), data.getAt(0));\n    for (var i = 0; i < data.getLength(); i++) {\n        ctx.lineTo(canvas.width - data.getLength() + i, data.getAt(i));\n    }\n    ctx.stroke();\n}\n\nvar points = new CircularArray(canvas.width);\nvar generator = new Generator(canvas.height);\n\nsetInterval(function() {\n    points.push(generator.next());\n    drawChart(points);\n},20);\n\ndrawChart(points);\n\nwindow.onresize = function () {\n    //canvas.setAttribute('width', chart.getBoundingClientRect().width);\n    //canvas.setAttribute('height', chart.getBoundingClientRect().height);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","function CircularArray(length) {\n    var array = [];\n    var maxLength = Math.floor(length);\n    var head = 0;\n\n    this.push = function(value) {\n        if (array.length < maxLength) {\n            array.push(value);\n        } else {\n            array[head++] = value;\n            head %= maxLength;\n        }\n    };\n\n    this.getAt = function (index) {\n        return array[(index + head) % maxLength];\n    };\n\n    this.getLength = function () {\n        return array.length;\n    };\n}\n\nmodule.exports = CircularArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/CircularArray.js\n ** module id = 1\n ** module chunks = 0\n **/","function Generator(maxY) {\n    var mainGenerator = new MainGenerator(100,maxY);\n    this.next = function() {\n        return mainGenerator.next();\n    };\n}\n\nfunction MainGenerator(maxX, maxY) {\n    var x, y, dy;\n    var ly  = Math.random() * maxY;\n\n    init();\n\n    function init() {\n        x = 10 + Math.floor(Math.random() * (maxX - 10));\n        y = Math.floor(Math.random() * maxY);\n        dy = (y - ly) / x;\n        step = 0;\n    };\n\n    this.next = function() {\n        ly += dy;\n        step++;\n        if (step >= x) init();\n        return ly;\n    };\n}\n\nmodule.exports = Generator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Generator.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}