{"version":3,"sources":["webpack:///webpack/bootstrap 4869c0b964e307ab45ab","webpack:///./src/index.js","webpack:///./src/lib/CircularArray.js","webpack:///./src/Generator.js","webpack:///./src/Chart.js","webpack:///./src/DerivativeChart.js","webpack:///./src/IntegralChart.js","webpack:///./src/Menu.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,6BAA6B;AACvC,YAAW,6BAA6B;AACxC,YAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,WAAU,wCAAwC;AAClD,YAAW,2CAA2C;;AAEtD;AACA;AACA;AACA;AACA,WAAU,8BAA8B;AACxC,UAAS,wCAAwC;AACjD;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAI,6BAA6B;AACjC,MAAK,6BAA6B;AAClC,MAAK,8BAA8B;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA8D,qBAAqB,EAAE;;AAErF;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9DA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpIA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACnHA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpHA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4869c0b964e307ab45ab","var CircularArray = require('./lib/CircularArray');\r\nvar Generator = require('./Generator');\r\nvar Chart = require('./Chart');\r\nvar DerivativeChart = require('./DerivativeChart');\r\nvar IntegralChart = require('./IntegralChart');\r\nvar Menu = require('./Menu');\r\n\r\nMenu.init(function (selectedItem) {\r\n  vChart.clear();\r\n  iChart.clear();\r\n  FChart.clear();\r\n  switch (selectedItem) {\r\n    case 'cpu':\r\n      generator = Generator.createCombinedGenerator(\r\n        [{from: 50, to: 200, weight: 1},\r\n          {from: 5, to: 30, weight: 0.2},\r\n          {from: 3, to: 15, weight: 0.05}]\r\n      );\r\n      break;\r\n    case 'ram':\r\n      generator = Generator.createCombinedGenerator(\r\n        [{from: 50, to: 150, weight: 1, rep: true},\r\n          {from: 10, to: 100, weight: 0.15, rep: true}]\r\n\r\n      );\r\n      break;\r\n    case 'disk':\r\n      generator = Generator.createCombinedGenerator(\r\n        [{from: 3, to: 15, weight: 0.05},\r\n        {from: 20, to: 100, weight: 1, rep: true}]\r\n      );\r\n      break;\r\n  }\r\n});\r\n\r\n  var redThreshold = 0.7;\r\n  var greenThreshold = 0.4;\r\n\r\n  var sliderRed = document.getElementById('slider-red');\r\n  sliderRed.value = redThreshold * 100;\r\n  sliderRed.onchange = function (e) {\r\n  redThreshold = e.target.value / 100;\r\n  vChart.setRedThreshold(redThreshold);\r\n};\r\n\r\nvar sliderGreen = document.getElementById('slider-green');\r\nsliderGreen.value = greenThreshold * 100;\r\nsliderGreen.onchange = function (e) {\r\n\r\n  greenThreshold = e.target.value / 100;\r\n  console.log(greenThreshold);\r\n  vChart.setGreenThreshold(greenThreshold);\r\n};\r\n\r\nvar percentElem = document.getElementById('f-percent');\r\nvar percent = 0;\r\n\r\nvar arrow = document.getElementsByClassName('arrow-icon')[0];\r\nvar arrowContainer = document.getElementsByClassName('arrow')[0];\r\n\r\nvar vChartElement = document.getElementById('v-chart');\r\nvar vChart = new Chart(vChartElement, redThreshold, greenThreshold);\r\n\r\nvar iChartElement = document.getElementById('i-chart');\r\nvar iChart = new DerivativeChart(iChartElement,'blue');\r\n\r\nvar FChartElement = document.getElementById('if-chart');\r\nvar FChart = new IntegralChart(FChartElement,'purple');\r\n\r\nvar generator = Generator.createCombinedGenerator(\r\n  [{from: 50, to: 200, weight: 1},\r\n    {from: 5, to: 30, weight: 0.2},\r\n    {from: 3, to: 15, weight: 0.05}]\r\n);\r\n\r\nvar derivative =  0, lastDerivative = 0, lastResult = 0, next = 0;\r\n\r\nfunction rotateArrow() {\r\n    var ANGLE_OFFSET = 90;\r\n    var angle = -Math.atan((next - lastResult) * 200) / Math.PI * 180;\r\n    angle += ANGLE_OFFSET;\r\n    arrow.style.transform = 'rotate(' +  angle + 'deg)';\r\n\r\n    var background;\r\n    if (next > redThreshold) background = '#ff2f2f';\r\n    else if (next < greenThreshold) background = '#63ff5a';\r\n    else background = '#fffe74';\r\n    arrowContainer.style.backgroundColor = background;\r\n}\r\n\r\nvar intervalId = setInterval(function() {\r\n  next = generator.next();\r\n  vChart.addRecord(next);\r\n  iChart.addRecord(next);\r\n  FChart.addRecord(next);\r\n  percent = next * 100;\r\n  rotateArrow();\r\n  lastResult = next;\r\n  lastDerivative = derivative;\r\n},200);\r\n\r\nfunction drawPercent(){\r\n    percentElem.innerHTML = Math.round(percent);\r\n}\r\n\r\nfunction onNextFrame() {\r\n    vChart.draw();\r\n    iChart.draw();\r\n    FChart.draw();\r\n    drawPercent();\r\n    requestAnimationFrame(onNextFrame);\r\n}\r\n\r\nonNextFrame();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","function CircularArray(length) {\r\n    var array = [];\r\n    var maxLength = Math.floor(length);\r\n    var head = 0;\r\n\r\n    this.push = function(value) {\r\n        if (array.length < maxLength) {\r\n            array.push(value);\r\n        } else {\r\n            array[head++] = value;\r\n            head %= maxLength;\r\n        }\r\n    };\r\n\r\n    this.getAt = function (index) {\r\n        return array[(index + head) % maxLength];\r\n    };\r\n\r\n    this.getLength = function () {\r\n        return array.length;\r\n    };\r\n\r\n    this.clear = function () {\r\n        array = [];\r\n        head = 0;\r\n    };\r\n}\r\n\r\nmodule.exports = CircularArray;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/CircularArray.js\n// module id = 1\n// module chunks = 0","function createCombinedGenerator(genParams) {\r\n    var generators = [];\r\n    var weights = [];\r\n    for (var i = 0; i < genParams.length; i++) {\r\n        if (genParams[i].rep) generators.push(new RepetitionGenerator(genParams[i].from, genParams[i].to));\r\n        else generators.push(new Generator(genParams[i].from, genParams[i].to));\r\n        weights.push(genParams[i].weight);\r\n    }\r\n    return new CombinedGenerator(generators, weights);\r\n}\r\n\r\nfunction CombinedGenerator(generators, weights) {\r\n    var overallWeight = weights.reduce(function (sum, weight){ return sum + weight; });\r\n\r\n    this.next = function() {\r\n        var next = 0;\r\n        for (var i = 0; i < generators.length; i++) {\r\n            next += generators[i].next() * weights[i];\r\n        }\r\n        return next / overallWeight;\r\n    }\r\n}\r\n\r\nfunction RepetitionGenerator(minX, maxX) {\r\n  var x, y, step;\r\n\r\n  init();\r\n\r\n  function init() {\r\n    x = minX + Math.floor(Math.random() * (maxX - minX));\r\n    y = Math.random();\r\n    step = 0;\r\n  }\r\n\r\n  this.next = function() {\r\n    step++;\r\n    if (step >= x) init();\r\n    return y;\r\n  };\r\n}\r\n\r\nfunction Generator(minX, maxX) {\r\n    var x, y, dy, step;\r\n    var ly  = Math.random();\r\n\r\n    init();\r\n\r\n    function init() {\r\n        x = minX + Math.floor(Math.random() * (maxX - minX));\r\n        y = Math.random();\r\n        dy = (y - ly) / x;\r\n        step = 0;\r\n    }\r\n\r\n    this.next = function() {\r\n        ly += dy;\r\n        step++;\r\n        if (step >= x) init();\r\n        return ly;\r\n    };\r\n}\r\n\r\nmodule.exports.createCombinedGenerator = createCombinedGenerator;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Generator.js\n// module id = 2\n// module chunks = 0","var CircularArray = require('./lib/CircularArray');\r\n\r\nfunction Chart(containerElement, redThreshold, greenThreshold) {\r\n    this._chartOffsetX = 30;\r\n    this._chartOffsetY = 20;\r\n\r\n    this._redThreshold = redThreshold || 0.7;\r\n    this._greenThreshold = greenThreshold || 0.3;\r\n\r\n    this._wrap = document.createElement('div');\r\n    this._wrap.style.position = 'relative';\r\n    this._grid = document.createElement('canvas');\r\n    this._grid.style.position = 'absolute';\r\n    this._chart = document.createElement('canvas');\r\n    this._chart.style.position = 'absolute';\r\n    // this._chart.style.left = this._chartOffsetX -1 + 'px';\r\n    // this._chart.style.border = \"1px solid #aaa\";\r\n\r\n\r\n    this._wrap.appendChild(this._grid);\r\n    this._wrap.appendChild(this._chart);\r\n    containerElement.appendChild(this._wrap);\r\n\r\n    var rect = containerElement.getBoundingClientRect();\r\n    this.setSize(rect.width, rect.height);\r\n\r\n    this._points = new CircularArray(rect.width);\r\n\r\n    this._ctx =  this._chart.getContext('2d');\r\n    this._ctx.strokeStyle = 'black';\r\n    //this._ctx.fillStyle = 'tomato';\r\n\r\n    this._setGradientFill();\r\n    this._ctx.lineWidth = 2;\r\n\r\n    this._ctxGrid = this._grid.getContext('2d');\r\n    this._ctxGrid.strokeStyle = '#aaa';\r\n    this._ctxGrid.lineWidth = 1;\r\n\r\n\r\n\r\n    this._drawGrid();\r\n}\r\n\r\nChart.prototype.setSize = function(width, height) {\r\n    this._wrap.width = width;\r\n    this._wrap.height = height;\r\n    this._grid.width = width;\r\n    this._grid.height = height;\r\n    this._chart.width = width - this._chartOffsetX;\r\n    this._chart.height = height - this._chartOffsetY;\r\n};\r\n\r\nChart.prototype.setRedThreshold = function(threshold) {\r\n  this._redThreshold = threshold;\r\n  this._setGradientFill();\r\n};\r\n\r\nChart.prototype.setGreenThreshold = function(threshold) {\r\n  this._greenThreshold = threshold;\r\n  this._setGradientFill();\r\n};\r\n\r\nChart.prototype._setGradientFill = function () {\r\n    var greenColor = 'rgba(9, 237, 58, 0.8)';\r\n    var yellowColor = 'rgba(247, 247, 44, 0.8)';\r\n    var redColor = 'rgba(252, 33, 0, 0.8)';\r\n\r\n    var blur = 0.1;\r\n\r\n    var gradient = this._ctx.createLinearGradient(0, 0, 0, this._chart.height);\r\n\r\n    gradient.addColorStop(0, redColor);\r\n    gradient.addColorStop(Math.max(1 - this._redThreshold - blur / 2, 0), redColor);\r\n    gradient.addColorStop(Math.min(1 - this._redThreshold + blur / 2, 1), yellowColor);\r\n\r\n    gradient.addColorStop(Math.max(1 - this._greenThreshold - blur / 2, 0), yellowColor);\r\n    gradient.addColorStop(Math.min(1 - this._greenThreshold + blur / 2, 1), greenColor);\r\n    gradient.addColorStop(1, greenColor);\r\n\r\n    this._ctx.fillStyle = gradient;\r\n};\r\n\r\nChart.prototype._drawGrid = function() {\r\n    var rowNum = 4;\r\n    var colNum = 7;\r\n    var rowHeight = this._chart.height / rowNum;\r\n    var colWidth = this._chart.width / colNum;\r\n\r\n    this._ctxGrid.textAlign = \"left\";\r\n    this._ctxGrid.textBaseline = \"top\";\r\n    for (var i = 0; i < rowNum + 1; i++) {\r\n        this._ctxGrid.fillText(Math.round((1 - (i / rowNum)) * 100) + '%', this._chart.width + 1, i * rowHeight);\r\n        var startX = 0.5,\r\n            startY = Math.round(i * rowHeight) + 0.5;\r\n        var endX = this._chart.width,\r\n            endY = startY;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    for (i = 0; i < colNum + 1; i++) {\r\n        startX = Math.round(i * colWidth) + 0.5;\r\n        startY = 0.5;\r\n        endX = startX;\r\n        endY = this._chart.height + 0.5;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    this._ctxGrid.stroke();\r\n};\r\n\r\nChart.prototype.draw = function() {\r\n    this._ctx.clearRect(0,0,this._chart.width,this._chart.height);\r\n    this._ctx.beginPath();\r\n    // this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height - this._points.getAt(0));\r\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height);\r\n    for (var i = 0; i < this._points.getLength(); i++) {\r\n        this._ctx.lineTo(this._chart.width - this._points.getLength() + i, this._chart.height - this._points.getAt(i));\r\n    }\r\n    this._ctx.lineTo(this._chart.width, this._chart.height);\r\n    this._ctx.closePath();\r\n    this._ctx.fill();\r\n};\r\n\r\nChart.prototype.addRecord = function(record) {\r\n    this._points.push(record * this._chart.height);\r\n};\r\n\r\nChart.prototype.clear = function () {\r\n  this._points.clear();\r\n};\r\n\r\nmodule.exports = Chart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Chart.js\n// module id = 3\n// module chunks = 0","var CircularArray = require('./lib/CircularArray');\r\n\r\nfunction DerivativeChart(containerElement, color) {\r\n    this._chartOffsetX = 30;\r\n    this._chartOffsetY = 20;\r\n\r\n\r\n  // this._redThreshold = redThreshold || 0.7;\r\n  // this._greenThreshold = greenThreshold || 0.3;\r\n\r\n    this._scale = 1;\r\n    this._wrap = document.createElement('div');\r\n    this._wrap.style.position = 'relative';\r\n    this._grid = document.createElement('canvas');\r\n    this._grid.style.position = 'absolute';\r\n    this._chart = document.createElement('canvas');\r\n    this._chart.style.position = 'absolute';\r\n    // this._chart.style.left = this._chartOffsetX -1 + 'px';\r\n    // this._chart.style.border = \"1px solid #aaa\";\r\n\r\n\r\n    this._wrap.appendChild(this._grid);\r\n    this._wrap.appendChild(this._chart);\r\n    containerElement.appendChild(this._wrap);\r\n\r\n    var rect = containerElement.getBoundingClientRect();\r\n    this.setSize(rect.width, rect.height);\r\n\r\n    this._points = new CircularArray(rect.width);\r\n\r\n    this._ctx =  this._chart.getContext('2d');\r\n    this._ctx.strokeStyle = color;\r\n    //this._ctx.fillStyle = 'tomato';\r\n\r\n    //this._setGradientFill();\r\n    this._ctx.lineWidth = 1.5;\r\n\r\n    this._ctxGrid = this._grid.getContext('2d');\r\n    this._ctxGrid.strokeStyle = '#aaa';\r\n    this._ctxGrid.lineWidth = 1;\r\n\r\n\r\n\r\n    this._drawGrid();\r\n}\r\n\r\nDerivativeChart.prototype.setSize = function(width, height) {\r\n    this._wrap.width = width;\r\n    this._wrap.height = height;\r\n    this._grid.width = width;\r\n    this._grid.height = height;\r\n    this._chart.width = width - this._chartOffsetX;\r\n    this._chart.height = height - this._chartOffsetY;\r\n};\r\n\r\nDerivativeChart.prototype._drawGrid = function() {\r\n    this._ctxGrid.clearRect(0,0,this._grid.width,this._grid.height);\r\n    var rowNum = 4;\r\n    var colNum = 7;\r\n    var rowHeight = this._chart.height / rowNum;\r\n    var colWidth = this._chart.width / colNum;\r\n\r\n    this._ctxGrid.textAlign = \"left\";\r\n    this._ctxGrid.textBaseline = \"top\";\r\n    for (var i = 0; i < rowNum + 1; i++) {\r\n        this._ctxGrid.fillText((((1 - (i / rowNum)) * 200 - 100) / this._scale).toFixed(1) + '%', this._chart.width + 1, i * rowHeight);\r\n        var startX = 0.5,\r\n            startY = Math.round(i * rowHeight) + 0.5;\r\n        var endX = this._chart.width,\r\n            endY = startY;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    for (i = 0; i < colNum + 1; i++) {\r\n        startX = Math.round(i * colWidth) + 0.5;\r\n        startY = 0.5;\r\n        endX = startX;\r\n        endY = this._chart.height + 0.5;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    this._ctxGrid.stroke();\r\n};\r\n\r\nDerivativeChart.prototype._calculateScale = function() {\r\n  var maxValue = 0;\r\n  for (var i = 1; i < this._points.getLength(); ++i){\r\n    var value = Math.abs(this._points.getAt(i) - this._points.getAt(i-1));\r\n    if (value > maxValue) maxValue = value;\r\n  }\r\n  this._scale =  this._chart.height / 2 / maxValue;\r\n};\r\n\r\nDerivativeChart.prototype.draw = function() {\r\n    this._calculateScale();\r\n    this._drawGrid();\r\n    this._ctx.clearRect(0,0,this._chart.width,this._chart.height);\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height/2 - (this._points.getAt(0) - this._points.getAt(1)) * this._scale);\r\n    // this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height);\r\n    for (var i = 1; i < this._points.getLength(); i++) {\r\n        this._ctx.lineTo(this._chart.width - this._points.getLength() + i, this._chart.height/2 - (this._points.getAt(i) - this._points.getAt(i-1)) * this._scale);\r\n    }\r\n    // this._ctx.lineTo(this._chart.width, this._chart.height);\r\n    this._ctx.stroke();\r\n};\r\n\r\nDerivativeChart.prototype.addRecord = function(record) {\r\n    this._points.push(record * this._chart.height/2);\r\n};\r\n\r\nDerivativeChart.prototype.clear = function () {\r\n  this._points.clear();\r\n};\r\n\r\nmodule.exports = DerivativeChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DerivativeChart.js\n// module id = 4\n// module chunks = 0","var CircularArray = require('./lib/CircularArray');\r\n\r\nfunction IntegralChart(containerElement, color) {\r\n    this._chartOffsetX = 50;\r\n    this._chartOffsetY = 20;\r\n\r\n\r\n  // this._redThreshold = redThreshold || 0.7;\r\n  // this._greenThreshold = greenThreshold || 0.3;\r\n\r\n    this._scale = 1;\r\n    this._wrap = document.createElement('div');\r\n    this._wrap.style.position = 'relative';\r\n    this._grid = document.createElement('canvas');\r\n    this._grid.style.position = 'absolute';\r\n    this._chart = document.createElement('canvas');\r\n    this._chart.style.position = 'absolute';\r\n    // this._chart.style.left = this._chartOffsetX -1 + 'px';\r\n    // this._chart.style.border = \"1px solid #aaa\";\r\n\r\n\r\n    this._wrap.appendChild(this._grid);\r\n    this._wrap.appendChild(this._chart);\r\n    containerElement.appendChild(this._wrap);\r\n\r\n    var rect = containerElement.getBoundingClientRect();\r\n    this.setSize(rect.width, rect.height);\r\n\r\n    this._points = new CircularArray(rect.width);\r\n\r\n    this._ctx =  this._chart.getContext('2d');\r\n    this._ctx.fillStyle = color;\r\n\r\n    this._ctx.lineWidth = 1.5;\r\n\r\n    this._ctxGrid = this._grid.getContext('2d');\r\n    this._ctxGrid.strokeStyle = '#aaa';\r\n    this._ctxGrid.lineWidth = 1;\r\n\r\n    this._drawGrid();\r\n}\r\n\r\nIntegralChart.prototype.setSize = function(width, height) {\r\n    this._wrap.width = width;\r\n    this._wrap.height = height;\r\n    this._grid.width = width;\r\n    this._grid.height = height;\r\n    this._chart.width = width - this._chartOffsetX;\r\n    this._chart.height = height - this._chartOffsetY;\r\n};\r\n\r\nIntegralChart.prototype._drawGrid = function() {\r\n    this._ctxGrid.clearRect(0,0,this._grid.width,this._grid.height);\r\n    var rowNum = 4;\r\n    var colNum = 7;\r\n    var rowHeight = this._chart.height / rowNum;\r\n    var colWidth = this._chart.width / colNum;\r\n\r\n    this._ctxGrid.textAlign = \"left\";\r\n    this._ctxGrid.textBaseline = \"top\";\r\n    for (var i = 0; i < rowNum + 1; i++) {\r\n        this._ctxGrid.fillText(Math.round((1 - (i / rowNum)) * 100 / this._scale) + '%', this._chart.width + 1, i * rowHeight);\r\n        var startX = 0.5,\r\n            startY = Math.round(i * rowHeight) + 0.5;\r\n        var endX = this._chart.width,\r\n            endY = startY;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    for (i = 0; i < colNum + 1; i++) {\r\n        startX = Math.round(i * colWidth) + 0.5;\r\n        startY = 0.5;\r\n        endX = startX;\r\n        endY = this._chart.height + 0.5;\r\n        this._ctxGrid.moveTo(startX, startY);\r\n        this._ctxGrid.lineTo(endX, endY);\r\n    }\r\n    this._ctxGrid.stroke();\r\n};\r\n\r\nIntegralChart.prototype._calculateScale = function() {\r\n  var sum = 0;\r\n  for (var i = 0; i < this._points.getLength(); ++i){\r\n    sum += Math.abs(this._points.getAt(i));\r\n  }\r\n  this._scale =  this._chart.height / sum;\r\n};\r\n\r\nIntegralChart.prototype.draw = function() {\r\n    this._calculateScale();\r\n    this._drawGrid();\r\n    this._ctx.clearRect(0,0,this._chart.width,this._chart.height);\r\n    this._ctx.beginPath();\r\n\r\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height - (this._points.getAt(0)) * this._scale);\r\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height);\r\n\r\n\r\n    var sum = 0;\r\n\r\n    for (var i = 1; i < this._points.getLength(); i++) {\r\n        sum += this._points.getAt(i);\r\n        this._ctx.lineTo(this._chart.width - this._points.getLength() + i, this._chart.height - sum * this._scale);\r\n    }\r\n    this._ctx.lineTo(this._chart.width, this._chart.height);\r\n    this._ctx.fill();\r\n};\r\n\r\nIntegralChart.prototype.addRecord = function(record) {\r\n    this._points.push(record * this._chart.height/2);\r\n};\r\n\r\nIntegralChart.prototype.clear = function () {\r\n  this._points.clear();\r\n};\r\n\r\nmodule.exports = IntegralChart;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/IntegralChart.js\n// module id = 5\n// module chunks = 0","var selectedItem;\r\n\r\nvar CLASS_SELECTED = 'menu-item-active';\r\nvar DEFAULT_SELECTED = 'cpu';\r\n\r\nvar buttonIds = ['cpu', 'ram', 'disk'];\r\nvar buttons = [];\r\n\r\nfunction hasClass(classNames, name) {\r\n  var classArr = classNames.split(' ');\r\n  return (classArr.indexOf(name) !== -1);\r\n}\r\n\r\nfunction toggleClass(classNames, name) {\r\n  var classArr = classNames.split(' ');\r\n  var classIndex = classArr.indexOf(name);\r\n  if (classIndex !== -1) {\r\n    classArr.splice(classIndex, 1);\r\n  } else {\r\n    classArr.push(name);\r\n  }\r\n  return classArr.join(' ');\r\n}\r\n\r\nfunction addClass(classNames, name) {\r\n  var classArr = classNames.split(' ');\r\n  var classIndex = classArr.indexOf(name);\r\n  if (classIndex !== -1) return classNames;\r\n  classArr.push(name);\r\n  return classArr.join(' ');\r\n}\r\n\r\nfunction removeClass(classNames, name) {\r\n  var classArr = classNames.split(' ');\r\n  var classIndex = classArr.indexOf(name);\r\n  if (classIndex === -1) return classNames;\r\n  classArr.splice(classIndex, 1);\r\n  return classArr.join(' ');\r\n}\r\n\r\nfunction selectItem(item) {\r\n    buttons.forEach(function (button) {\r\n      if (button.id === item) {\r\n        button.className = addClass(button.className, CLASS_SELECTED);\r\n      } else {\r\n        button.className = removeClass(button.className, CLASS_SELECTED);\r\n      }\r\n  });\r\n  selectedItem = item;\r\n}\r\n\r\nfunction init(onSelect) {\r\n\r\n  buttonIds.forEach(function (id) {\r\n    var button = document.getElementById(id);\r\n    button.onclick = function() {\r\n      selectItem(id);\r\n      onSelect(id);\r\n    };\r\n    buttons.push(button);\r\n  });\r\n\r\n  selectItem(DEFAULT_SELECTED);\r\n}\r\n\r\nmodule.exports.init = init;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Menu.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}