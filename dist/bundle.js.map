{"version":3,"sources":["webpack:///webpack/bootstrap d1aedae3ace716beb10b","webpack:///./src/index.js","webpack:///./src/lib/CircularArray.js","webpack:///./src/Generator.js","webpack:///./src/Chart.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,OAAM,6BAA6B;AACnC,MAAK,6BAA6B;AAClC,MAAK,8BAA8B;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,G;;;;;;AC/DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvBA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA8D,qBAAqB,EAAE;;AAErF;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3CA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d1aedae3ace716beb10b","var CircularArray = require('./lib/CircularArray');\nvar Generator = require('./Generator');\nvar Chart = require('./Chart');\n// var GLView = require('./GLView');\n// var Vector = require('./lib/math/Vector');\n// var Matrix = require('./lib/math/Matrix');\n\n\nvar chartElement = document.getElementById('cpu-chart');\n// var glViewElement = document.getElementById('gl-view');\nvar chart = new Chart(chartElement);\n// var glView = new GLView(glViewElement);\n\nvar percentElem = document.getElementById('cpu-percent');\nvar percent = 0;\n\nvar arrow = document.getElementsByClassName('arrow-icon')[0];\nvar arrowContainer = document.getElementsByClassName('arrow')[0];\n\nvar generator = Generator.createCombinedGenerator(\n    [{from: 50, to: 200, weight: 1},\n    {from: 5, to: 30, weight: 0.2},\n    {from: 3, to: 15, weight: 0.05}]\n);\n\nvar lastResult = 0, next = 0;\n\nfunction rotateArrow() {\n    var ANGLE_OFFSET = 90;\n    var angle = -Math.atan((next - lastResult) * 200) / Math.PI * 180;\n    angle += ANGLE_OFFSET;\n    arrow.style.transform = 'rotate(' +  angle + 'deg)';\n\n    var background;\n    if (next > 0.7) background = '#ff2f2f';\n    else if (next < 0.4) background = '#63ff5a';\n    else background = '#fffe74';\n    arrowContainer.style.backgroundColor = background;\n}\n\nsetInterval(function() {\n    next = generator.next();\n    chart.addRecord(next);\n    percent = next * 100;\n    rotateArrow();\n    lastResult = next;\n},100);\n\nfunction drawPercent(){\n    percentElem.innerHTML = Math.round(percent);\n}\n\nfunction onNextFrame() {\n    chart.draw();\n    // glView.draw();\n    drawPercent();\n    requestAnimationFrame(onNextFrame);\n}\n\nonNextFrame();\n\nwindow.onresize = function () {\n\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","function CircularArray(length) {\n    var array = [];\n    var maxLength = Math.floor(length);\n    var head = 0;\n\n    this.push = function(value) {\n        if (array.length < maxLength) {\n            array.push(value);\n        } else {\n            array[head++] = value;\n            head %= maxLength;\n        }\n    };\n\n    this.getAt = function (index) {\n        return array[(index + head) % maxLength];\n    };\n\n    this.getLength = function () {\n        return array.length;\n    };\n}\n\nmodule.exports = CircularArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lib/CircularArray.js\n// module id = 1\n// module chunks = 0","function createCombinedGenerator(genParams) {\n    var generators = [];\n    var weights = [];\n    for (var i = 0; i < genParams.length; i++) {\n        generators.push(new Generator(genParams[i].from, genParams[i].to));\n        weights.push(genParams[i].weight);\n    }\n    return new CombinedGenerator(generators, weights);\n}\n\nfunction CombinedGenerator(generators, weights) {\n    var overallWeight = weights.reduce(function (sum, weight){ return sum + weight; });\n\n    this.next = function() {\n        var next = 0;\n        for (var i = 0; i < generators.length; i++) {\n            next += generators[i].next() * weights[i];\n        }\n        return next / overallWeight;\n    }\n}\n\nfunction Generator(minX, maxX) {\n    var x, y, dy, step;\n    var ly  = Math.random();\n\n    init();\n\n    function init() {\n        x = minX + Math.floor(Math.random() * (maxX - minX));\n        y = Math.random();\n        dy = (y - ly) / x;\n        step = 0;\n    }\n\n    this.next = function() {\n        ly += dy;\n        step++;\n        if (step >= x) init();\n        return ly;\n    };\n}\n\nmodule.exports.createCombinedGenerator = createCombinedGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Generator.js\n// module id = 2\n// module chunks = 0","var CircularArray = require('./lib/CircularArray');\n\nfunction Chart(containerElement, redThreshold, yellowThreshold) {\n    this._chartOffsetX = 30;\n    this._chartOffsetY = 20;\n\n    this._redThreshold = redThreshold || 0.7;\n    this._yellowThreshold = yellowThreshold || 0.3;\n\n    this._wrap = document.createElement('div');\n    this._wrap.style.position = 'relative';\n    this._grid = document.createElement('canvas');\n    this._grid.style.position = 'absolute';\n    this._chart = document.createElement('canvas');\n    this._chart.style.position = 'absolute';\n    // this._chart.style.left = this._chartOffsetX -1 + 'px';\n    // this._chart.style.border = \"1px solid #aaa\";\n\n\n    this._wrap.appendChild(this._grid);\n    this._wrap.appendChild(this._chart);\n    containerElement.appendChild(this._wrap);\n\n    var rect = containerElement.getBoundingClientRect();\n    this.setSize(rect.width, rect.height);\n\n    this._points = new CircularArray(rect.width);\n\n    this._ctx =  this._chart.getContext('2d');\n    this._ctx.strokeStyle = 'black';\n    //this._ctx.fillStyle = 'tomato';\n\n    this._setGradientFill();\n    this._ctx.lineWidth = 2;\n\n    this._ctxGrid = this._grid.getContext('2d');\n    this._ctxGrid.strokeStyle = '#aaa';\n    this._ctxGrid.lineWidth = 1;\n\n\n\n    this._drawGrid();\n}\n\nChart.prototype.setSize = function(width, height) {\n    this._wrap.width = width;\n    this._wrap.height = height;\n    this._grid.width = width;\n    this._grid.height = height;\n    this._chart.width = width - this._chartOffsetX;\n    this._chart.height = height - this._chartOffsetY;\n};\n\nChart.prototype._setGradientFill = function () {\n    var greenColor = 'rgba(9, 237, 58, 0.8)';\n    var yellowColor = 'rgba(247, 247, 44, 0.8)';\n    var redColor = 'rgba(252, 33, 0, 0.8)';\n\n    var blur = 0.25;\n\n    var gradient = this._ctx.createLinearGradient(0, 0, 0, this._chart.height);\n\n    gradient.addColorStop(0, redColor);\n    gradient.addColorStop(1 - this._redThreshold - blur / 2, redColor);\n    gradient.addColorStop(1 - this._redThreshold + blur / 2, yellowColor);\n    gradient.addColorStop(1 - this._yellowThreshold - blur / 2, yellowColor);\n    gradient.addColorStop(1 - this._yellowThreshold + blur / 2, greenColor);\n    gradient.addColorStop(1, greenColor);\n\n    this._ctx.fillStyle = gradient;\n};\n\nChart.prototype._drawGrid = function() {\n    var rowNum = 4;\n    var colNum = 7;\n    var rowHeight = this._chart.height / rowNum;\n    var colWidth = this._chart.width / colNum;\n\n    this._ctxGrid.textAlign = \"left\";\n    this._ctxGrid.textBaseline = \"top\";\n    for (var i = 0; i < rowNum + 1; i++) {\n        this._ctxGrid.fillText(Math.round((1 - (i / rowNum)) * 100) + '%', this._chart.width + 1, i * rowHeight);\n        var startX = 0.5,\n            startY = Math.round(i * rowHeight) + 0.5;\n        var endX = this._chart.width,\n            endY = startY;\n        this._ctxGrid.moveTo(startX, startY);\n        this._ctxGrid.lineTo(endX, endY);\n    }\n    for (i = 0; i < colNum + 1; i++) {\n        startX = Math.round(i * colWidth) + 0.5;\n        startY = 0.5;\n        endX = startX;\n        endY = this._chart.height + 0.5;\n        this._ctxGrid.moveTo(startX, startY);\n        this._ctxGrid.lineTo(endX, endY);\n    }\n    this._ctxGrid.stroke();\n};\n\nChart.prototype.draw = function() {\n    this._ctx.clearRect(0,0,this._chart.width,this._chart.height);\n    this._ctx.beginPath();\n    // this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height - this._points.getAt(0));\n    this._ctx.moveTo(this._chart.width - this._points.getLength(), this._chart.height);\n    for (var i = 0; i < this._points.getLength(); i++) {\n        this._ctx.lineTo(this._chart.width - this._points.getLength() + i, this._chart.height - this._points.getAt(i));\n    }\n    this._ctx.lineTo(this._chart.width, this._chart.height);\n    this._ctx.closePath();\n    this._ctx.fill();\n};\n\nChart.prototype.addRecord = function(record) {\n    this._points.push(record * this._chart.height);\n};\n\nmodule.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Chart.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}